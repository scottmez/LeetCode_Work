/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* head = new ListNode();
        ListNode* curr = head;
        int carry = 0;
        curr->val = (l1->val + l2->val); 
        if (curr->val > 9) {
            curr->val -= 10;
            carry = 1;
        }
        while (l1->next != nullptr && l2->next != nullptr) {
            curr->next = new ListNode(l1->next->val + l2->next->val + carry);
            if (curr->next->val > 9) {
                curr->next->val -= 10;
                carry = 1;
            }
            else {carry = 0;}
            l1 = l1->next;
            l2 = l2->next;
            curr = curr->next;
        }
        while (l1->next != nullptr) {
            curr->next = new ListNode(l1->next->val + carry);
            if (curr->next->val > 9) {
                curr->next->val -= 10;
                carry = 1;
            }
            else {carry = 0;}
            l1 = l1->next;
            curr = curr->next;
        }
        while (l2->next != nullptr) {
            curr->next = new ListNode(l2->next->val + carry);
            if (curr->next->val > 9) {
                curr->next->val -= 10;
                carry = 1;
            }
            else {carry = 0;}
            l2 = l2->next;
            curr = curr->next;
        }
        if (carry == 1) {
            curr->next = new ListNode(carry);
        }
        return head;
    }
    
};
